pico-8 cartridge // http://www.pico-8.com
version 17
__lua__
-- muncher
-- by josh at pixelverse.org
-- v1.0 2015-04-29

-- todo:
-- power break walls?
-- power re-build floor?
-- main level in center
-- behind the scenes on sides

spr_player=1
spr_playerdeath=52
spr_monster=16
spr_monsterpow=32
spr_eyes=20
spr_bit=13
spr_byte=14
spr_eaten=15
spr_chomped=31

maxlife=30

-- main
function _init()
 gameover=false
 sfx(1)
 time=0
 sprites={}
 players={}
 monsters={}
 particles={}
 for x=0,128 do
  for y=0,64 do
   v=mget(x,y)
   if v==spr_player then
    p=mksprite(v,4,x,y)
       p.w=4
       p.h=4
       p.id=count(players)
       p.life=maxlife
       p.update=do_player
       p.canpass=player_canpass
       p.draw=draw_player
       p.powerup=player_powerup
       add(players,p)
       mset(x,y,spr_eaten)
      end
   if iscreature(x,y) then
       m=mksprite(v,2,x,y)
       m.life=1
       m.w=4
       m.h=4
       m.color=rnd(5)+8
       m.draw=draw_monster
       m.update=do_monster
       m.canpass=monster_canpass
       add(monsters,m)
       mset(x,y,spr_bit)
      end
      if isdeadly(x,y) then
       m=mksprite(v,1,x,y)
       m.life=1
       m.w=4
       m.h=4
       --m.color=rnd(5)+8
       m.draw=draw_monster
       m.update=do_deadly
       --m.canpass=monster_canpass
       add(monsters,m)
       mset(x,y,spr_bit)
      end

    end
  end
end

function _update60()
 if gameover then
  if (btnp(4,0) or btnp(5,0) or
      btnp(4,1) or btnp(5,1)) then
   run()
  end
 end
 for s in all(sprites) do
  s:update()
 end
 for p in all(players) do
  for m in all(monsters) do
   if overlaps(p,m) then
    collide(p,m)
   end
  end
 end
 time=time+1
end

function _draw()
 cls()
 --camera(0,0)
 --rectfill(0,0,128,128,0)
 p=players[1]
 if p~=nil then
  camx=flr((p.x+0.5)/16)*128
  camy=flr((p.y+0.5)/16)*128
 end
 camera(camx,camy)
 mapdraw(0,0,0,0,128,64,0)
 for s in all(sprites) do
  s:draw()
 end
 if count(players)==0 then
  gameover=true
  camera(0,0)
  color(1)
  print("game over",64-9*2+1,50+1)
  print("press a key",64-11*2+1,70+1)
  color(time%5+8)
  print("game over",64-9*2,50)
  print("press a key",64-11*2,70)
 else
  if not anybits(camx/8,camy/8) then
   gameover=true
   for p in all(players) do
    p.life=10
   end
   if time%10==0 then
    x=camx/8+rnd(16)
    y=camy/8+rnd(16)
     starburst(46,x,y,20,2,3,2)
     starburst(47,x,y,17,1,2,2.5)
     starburst(46,x,y,15,0.5,1,3)
   end
   camera(0,0)
   color(1)
   print("you win!!!",64-9*2+1,50+1)
   print("press a key",64-11*2+1,70+1)
   color(time%5+8)
   print("you win!!!",64-9*2,50)
   print("press a key",64-11*2,70)
  end
 end
end

function anybits(x0,y0)
 for x=0,16 do
  for y=0,16 do
   v=mget(x+x0,y+y0)
   if v==spr_bit then
    return true
   end
  end
 end
 return false
end

-- util
-- print_center(t,y)

-- map
function issolid(x,y)
 if (x < 0 or x >= 128 or
     y < 0 or y >= 64) then
    return true
  end
  val = mget(x, y)
  return fget(val, 0)
end

function isroad(x,y)
 if (x < 0 or x >= 128 or
     y < 0 or y >= 64) then
   return false
  end
  val = mget(x, y)
  return fget(val, 1)
end

function isghostroad(x,y)
 if (x < 0 or x >= 128 or
     y < 0 or y >= 64) then
    return false
  end
  val = mget(x, y)
  return val==spr_chomped
end

function iseaten(x,y)
 if (x < 0 or x >= 128 or
     y < 0 or y >= 64) then
    return false
  end
  val = mget(x, y)
  return val==spr_eaten
end

function ispowerup(x,y)
 if (x < 0 or x >= 128 or
     y < 0 or y >= 64) then
    return false
  end
  val = mget(x, y)
  return fget(val, 2)
end

function iscreature(x,y)
 if (x < 0 or x >= 128 or
     y < 0 or y >= 64) then
    return false
  end
  val = mget(x, y)
  return fget(val, 3)
end

function isdeadly(x,y)
 if (x < 0 or x >= 128 or
     y < 0 or y >= 64) then
    return false
  end
  val = mget(x, y)
  return fget(val, 4)
end

-- sprite
function mksprite(frame,framecount,x,y)
 s={}
 s.frame0=frame -- start frame for anim
 s.frame=frame  -- current frame
 s.framecount=framecount -- num frames in cycle
 s.x=x     s.y=y  -- position in tiles
 s.cx=0    s.cy=0 -- control -1,0,+1
 s.vx=0    s.vy=0 -- velocity -1,0,+1
 s.destx=x s.desty=y -- destination in tiles
 s.w=8     s.h=8  -- width,height in pixels
 s.facing=1 -- horizontal flip -1,0,+1
  s.power=0
 s.update=update_sprite
 s.draw=draw_sprite
 s.canpass=canpass
 add(sprites,s)
 return s
end

function canpass(s,x,y)
 return not issolid(x,y)
end

function player_canpass(s,x,y)
 return isroad(x,y) --or iseaten(x,y)
end

function monster_canpass(s,x,y)
 if s.life>0 then
  return isroad(x,y)
 else
  return isghostroad(x,y)
 end
 --return (isroad(x,y) or (flr(x)==flr(s.x) and flr(y)==flr(s.y)))
end

function update_sprite(s)
 s.x+=s.vx*0.125
 s.y+=s.vy*0.125
end

function draw_sprite(s)
 if s.allcolor~=nil then
  for i=1,15 do
   pal(i,s.allcolor)
  end
 end
 x=s.x*8
 y=s.y*8
 spr(s.frame, x, y,
     1, 1, s.facing<0)
 pal()
 if false then
  text="("..s.x..","..s.y..")"
  color(12)
  print(text,x+10,y+2)
 end
end

-- collison
function overlaps(a,b)
 return (abs(a.x-b.x)*8 < a.w+b.w and
         abs(a.y-b.y)*8 < a.h+b.h)
end

function collide(p,m)
 if m.life>0 then
  if p.power>0 then
   m.life=0
   starburst(47,m.x,m.y,20,3,3,1.5)
  else
   p.life=0
   m.power=30
  end
 end
end

function move_character(p,cx,cy)
 -- was there any input?
 if cx!=0 or cy!=0 then
  -- remember for facing/anim
  p.cx=cx p.cy=cy
  -- round center to cur xy
  x=flr(p.x+0.5) y=flr(p.y+0.5)
  -- find target xy
  destx=x+cx desty=y+cy
  if p:canpass(destx,desty) then
   -- aim here, else keep old dest
   p.destx=destx p.desty=desty
  end
 end

 if (p.cy==0) p.facing=p.cx
 
 -- delta to destination
 dx=p.x-p.destx
 dy=p.y-p.desty
 -- move towards dest
 if dx!=0 then p.vx=-sgn(dx) else p.vx=0 end
 if dy!=0 then p.vy=-sgn(dy) else p.vy=0 end
end

-- player
function do_player(p)
 --use controls to +-1 xy
 cx=0 cy=0
 cx=p.cx cy=p.cy
 if btnp(0,p.id) then cx=-1 cy=0 end
 if btnp(1,p.id) then cx= 1 cy=0 end
 if btnp(2,p.id) then cy=-1 cx=0 end
 if btnp(3,p.id) then cy= 1 cx=0 end
 if btnp(4,p.id) then p.power=5 end

 -- actually move
 move_character(p,cx,cy)
 update_sprite(p)
 if p.power>0 then -- 2x speed
  move_character(p,cx,cy)
  update_sprite(p)
 end
 
 -- animate chomping based on control dir
 p.frame=p.frame0+time/3%p.framecount
 if p.cy<0 then
  p.frame=p.frame+p.framecount
 end
 if p.cy>0 then
  p.frame=p.frame+p.framecount*2
 end

 -- stats
 p.power=max(0,p.power-0.125)
 p.life=max(0,p.life-0.125)
 
 -- eat the current tile
  eat(p,flr(p.x+0.5),flr(p.y+0.5))
  
  if p.life<=0 then
   s=mkparticle(spr_playerdeath,
                p.x,p.y,0,0,2)
   s.framecount=5
   s.allcolor=11-p.id
   s.ondelete=function(s)
    starburst(46,s.x,s.y,20,2,3,2)
    starburst(47,s.x,s.y,17,1,2,2.5)
    starburst(46,s.x,s.y,15,0.5,1,3)
   end
   del(players,p)
   del(sprites,p)
  end
end

function draw_player(p)
 pal(11,11-p.id)
 if p.power>0 then
  if (p.power<5 and time%4==0) return
  pal(11,8+time%5)
 end
 if (p.life<10 and time%4==0) return
 draw_sprite(p)
 --spr(61, p.destx*8, p.desty*8, 1, 1, 0)
end

function eat(s,x,y)
 v=mget(x,y)
 if isdeadly(x,y) and s.power==0 then
  s.life=0
  return
 end
 if ispowerup(x,y) then
  s:powerup(v)
  starburst(46,x,y,7,1.5,1.5,1)
  s.life=50
  mset(x,y,spr_eaten)
 end
 if v==spr_bit then
  s.life=50
  mset(x,y,spr_eaten)
  sfx(0)
 end
 if iseaten(x,y) and s.power>0 then
  mset(x,y,spr_chomped)
 end
end

function swap(x,y)
 x0=flr(x/16)*16 y0=flr(y/16)*16
 for x=x0,x0+16 do
  for y=y0,y0+16 do
   v=mget(x,y)
   if (v==spr_bit) mset(x,y,en)
   if (v==spr_eaten) mset(x,y,spr_bit)
  end
 end
end

function player_powerup(p,v)
 p.power=10
end

-- monster
function do_monster(m)
 m.frame=m.frame0+time/3%m.framecount
 if (m.vy!=0) m.frame+=m.framecount

 atx=m.x==flr(m.x) and m.y==flr(m.y)
 cx=m.cx cy=m.cy
 if rnd(100)<10 and atx then
  d=flr(rnd(4))
  if d==0 then cx=-1 cy=0 end
  if d==1 then cx= 1 cy=0 end
  if d==2 then cy=-1 cx=0 end
  if d==3 then cy= 1 cx=0 end
 end
 
 move_character(m,cx,cy)
 update_sprite(m)
 if m.power>0 then -- 2x speed
  move_character(m,cx,cy)
  update_sprite(m)
 end
 
 m.power=max(0,m.power-0.125)
end

function draw_monster(m)
 pal(12,m.color)
 if m.life>0 then
  if m.power>0 then
   if time%4<2 then
    m.frame0=spr_monsterpow
   else
    m.frame0=spr_monsterpow+4
   end
  else
   m.frame0=spr_monster
  end
 else
  m.frame0=spr_eyes
 end
 draw_sprite(m)
 pal()
end

-- particle
function mkparticle(f,x,y,vx,vy,life)
 s=mksprite(f,1,x,y)
 s.vx=vx s.vy=vy
 s.startlife=life
 s.life=life
 s.update=update_particle
 add(particles,s)
 return s
end

function update_particle(p)
 update_sprite(p)
 p.life-=0.125
 if p.life<=0 then
  del(particles,p)
  del(sprites,p)
  if p.ondelete~=nil then
   p:ondelete()
  end
 end
 t=(p.startlife-p.life)/p.startlife*p.framecount
 p.frame=p.frame0+t%p.framecount
end

function starburst(f,x,y,count,v0,v1,life)
 vd=v1-v0
 for i=0,count do
  vx=sin(i/count)*(v0+rnd(vd))
  vy=cos(i/count)*(v0+rnd(vd))
  mkparticle(f,x,y,vx,vy,life)
 end
end

-- deadly
function do_deadly(m)
 --m.frame=m.frame0+time%m.framecount
 if (time%2==0) m.facing*=-1
 update_sprite(m)
 if m.life<=0 then
  del(monsters,m)
  del(sprites,m)
 end
end





__gfx__
000000000077bbbb000000000000000000000000bb7000bb0bb70bb000bb7bb000bb7bb0000bb000000bb000000bb000000bb000505050505050505050505050
000000000b71bbbb0b77bbbb0b77bbb00b77bbb0bb0007bb0bb07bb00bbb0bb00bbbbbb00bbbbbb00bbbbbb00bbbbbb00bbbbbb0050050050500500505005005
000000000bbbb7070b71bbbb0b71bbbb0b71bbbbbb7000bb0bb70bb00bbb7bb00bbb7bb00bbbbb770bbbb7700bbbb7700bbbb77050505050500aa05050505050
00000000bbb70000bbbbb707bbbbbbbbbbbbbbbbbbb00bbb0bbb0bb00bbb0bb00bbbbbb0bbb07b170bb7b1700bb7b1700bb7b1700000600000a77a0000005000
00000000bbb00000bbb70070bbb70707bbb7b7b771b70bbb071b7bb0071b7bb0071b7bb0bbb00bbb0bb0bbb00bb0bbb00bbbbbb05556665555a77a5555555555
000000000bbbb0700bbbbbbb0bbbbbbb0bbbbbbb77bbbbb0077bbbb0077bbbb0077bbbb0bb0007bb0bb07bb00bb7bbb00bb7bbb000006000000aa00000005000
000000000bbbbbbb0bbbbbbb0bbbbbbb0bbbbbbb0bbbbbb00bbbbbb00bbbbbb00bbbbbb0bb7000bb0bb70bb00bb0bbb00bbbbbb0505050505050505050505050
00000000000bbbbb000000000000000000000000000bb000000bb000000bb000000bb000bb0007bb0bb07bb00bb7bb000bb7bb00050050050500500505005005
0c0c0c0000c0c0c00c0c0c0000c0c0c000000000000000000000000000000000000000000000000000001dccccd10000cccccccc000000007070c07000005000
0cccccccccccccc00cccccccccccccc000000000000000000000000000000000000000000000000000101dccccd10100cccccccc000000000700c00700000000
cc71c7100c71c71ccc11c1100c11c11c00710710007107100011011000110110000001011010000001001dccccd10010dddddddd101111017070c07000005000
0c71c71ccc71c7100c77c77ccc77c7700071071000710710007707700077077000001000000100000001ddccccdd100011111111000000000000a00000000000
ccccccc00cccccccccccccc00ccccccc000000000000000000000000000000000001001111001000111ddccccccdd1110000000011111111cccaaacc50505050
0cccccccccccccc00cccccccccccccc000000000000000000000000000000000001001dddd100100ddddccccccccdddd10111101dddddddd0000a00000000000
ccccccc00cccccccccccccc00ccccccc0000000000000000000000000000000000001ddccdd10000cccccccccccccccc00000000cccccccc7070c07000005000
00c0c0c00c0c0c0000c0c0c00c0c0c000000000000000000000000000000000000101dccccd10100cccccccccccccccc00000000cccccccc0700c00700000000
0f0f0f0000f0f0f00f0f0f0000f0f0f00808080000808080080808000080808000101dccccd10100ccccccccccccccccccd1010000101dcc0000000000000000
0888888ff88888800888888ff88888800ffffff88ffffff00ffffff88ffffff000001ddccdd10000ccccccccccccccccccd1000000001dcc0000000000000000
f82782700827827ff87787700877877f8f27f2700f27f2788f77f7700f77f778001001dddd100100ddddccccccccddddccd1010000101dcc0000000000070000
0827827ff82782700822822ff82282200f27f2788f27f2700f22f2288f22f2200001001111001000111ddccccccdd111ccd1010000101dcc0000000000077700
f88888800888888ff88888800888888f8ffffff00ffffff88ffffff00ffffff800001000000100000001ddccccdd1000ccd1010000101dcc0000700000777000
0888888ff88888800888888ff88888800ffffff88ffffff00ffffff88ffffff0000001011010000001001dccccd10010ccd1010000101dcc0000000000007000
f88888800888888ff88888800888888f8ffffff00ffffff88ffffff00ffffff8000000000000000000101dccccd10100ccd1000000001dcc0000000000000000
00f0f0f00f0f0f0000f0f0f00f0f0f0000808080080808000080808008080800000000000000000000001dccccd10000ccd1010000101dcc0000000000000000
44400000000440000a0a0a0000ffff000017bbbb0017000000000000000000000000000000000000000000000000000000aa7000660550660000000000000000
04040000000040000c0c0c000f99fff00b77bbbb0b77b00000000000000000000000000000000000000000000a000a000aaa7000600000060000000000000000
004040000878488077777777f9ffffff0bbbb7070bbbb0000000000000000000000000000000000000000000aa00aa00000a7aa00000000000000000000ff000
00400880878888887efeeefef9ffffffbbb70000bbb70000bbb0000000000000000000000000000000000000aaa77777000a7a0050000005000ff00000f77f00
08808788878888887eeefeeeffffffffbbb00000bbb00000bbb00000000000000000000000000000000000007777aaaa00a7700050000005000ff00000f77f00
878888888888888877777777ffffffff0bbbb0700bbbb0700bbbb07000bbb07000000070000000000000000000aa00aa0aa7a0000000000000000000000ff000
88880880088888807efeefee0ffffff00bbbbbbb0bbbbbbb0bbbbbbb0bbbbbbb00000bbb000000000000000000a000a00007aaa0600000060000000000000000
08800000008888007eeeeeee00ffff00000bbbbb000bbbbb000bbbbb000bbbbb0000bbbb0000000000000000000000000007aa00660550660000000000000000
0000000001dccd1000000000000000000000000001dccd1000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111101dccd100011111111111100111111111ddccd1000011000111110000000000000000000000000000000000000000000000000000000000000000000
dddddddd01dccd10011dddddddddd110ddddddddddcccd10001dd100ddddd1000000000000000000000000000000000000000000000000000000000000000000
cccccccc01dccd1001ddccccccccdd10cccccccccccccd1001dccd10cccccd100000000000000000000000000000000000000000000000000000000000000000
cccccccc01dccd1001dccccccccccd10cccccccccccccd1001dccd10cccccd100000000000000000000000000000000000000000000000000000000000000000
dddddddd01dccd1001dccddddddccd10ddccccddddcccd1001dccd10ddddd1000000000000000000000000000000000000000000000000000000000000000000
1111111101dccd1001dccd1111dccd101ddccdd11ddccd1001dccd10111110000000000000000000000000000000000000000000000000000000000000000000
0000000001dccd1001dccd1001dccd1001dccd1111dccd1001dccd10000000000000000000000000000000000000000000000000000000000000000000000000
01dccd10cccccccc01dccd1001dccd1001dccd1111dccd100000000001dccd100000000000000000000000000000000000000000000000000000000000000000
1ddccdd1cccccccc01dccd1111dccd1001dccdd11ddccdd10001111101dccd100000000000000000000000000000000000000000000000000000000000000000
ddccccddcccccccc01dccddddddccd1001dcccddddccccdd001ddddd01dccd100000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccc01dccccccccccd1001dccccccccccccc01dccccc01dccd100000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccc01ddccccccccdd1001dccccccccccccc01dccccc01dccd100000000000000000000000000000000000000000000000000000000000000000
ddccccddcccccccc011dddddddddd11001dcccdddddddddd001ddddd001dd1000000000000000000000000000000000000000000000000000000000000000000
1ddccdd1cccccccc001111111111110001dccdd11111111100011111000110000000000000000000000000000000000000000000000000000000000000000000
01dccd10cccccccc000000000000000001dccd100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000002060208000000080000000101010101018002080000000800000001010101010100000606060600000000000000121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2b1c1c1c2a2b1c1c1c1c2a2b1c1c1c2a2b1c1c1c1c2a2b1c1c2a2b1c1c1c1c2a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c100d0d28290d0d0d0d28290d0d102d2c0e100d0d28290d0d28290d0d0d0e2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0e0d0d0d0d0d0d0d0d0d0d0e0d2d2c0d18190d0d0d0d0d0d0d0d1819102d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d0d0d0d0d0d0d0d0d0d0d2d2c0d28290d0d181d1d190d0d28290d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d300d0d0d0d0d0d0d0d0d2d2c0d0d0d0d0d282a2b290d0d0d0d0d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d0d0d0d0d0d0d0d0d0d0d2d2c0d18190d0d0d28290d0d181d190d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d0d0d0d0d0d0d0d320d0d2d2c0d2d2c0d0d0d0d0d0d0d281c290d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d0d0d0d0d0d0d0d0d0d0d2d2c0d2d2c0d0e0d0d0d0d0d0d0d0d0d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d0d0d01010d0d0d0d0d0d28290d2d2c0d0d0d0d0d0d18190d0d0d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d2d1b1d1d1d1d1d1d1a2c0d0d0d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d0d0d0d0d0d0d0d0d0d0d18190d2d2b1c1c1c1c2a2b1c290d181d1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d0d0d0d0d0d0d0d0d0d0d2d2c0d2d2c0d0d0d0d2d2c0d0d0d281c2a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0d0d0d0d0d0d0d0d0d0d0d0d0d2d2c0d2d2c0d18190d2d2c0d0e0d0d0d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c0d0e0d0d0d0d0d0d0d0d0d0d0e0d2d2c0d28290d2d2c0d28290d0d0d0d0d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2c100d0d18190d0d0d0d18190d0d102d2c100d0d0d2d2c0d0d0d0d18190d102d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1b1d1d1d1a1b1d193b181a1b1d1d1d1a1b1d1d1d1d1a1b1d193b181a1b1d1d1a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
42404040404040473b564040404040434240404040404040473b564040404043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410e0d0d0d0d0d0d0d0d0d0d0d0d0e41410e0d0d0d0d0d0d0d0d0d0d0d0d0e41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
41105640444040404040404440470d4141105640444040404040404440470d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d0d0d410d0d0d320d0d410d100d41410d0d0d410d0d0d320d0d410d100d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d460d570d42470d460d570d460d41410d460d570d42470d460d570d460d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d410d0d0d410d0d410d0d0d410d41410d410d0d0d410d0d410d0d0d410d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d570d460d410d56450d460d570d57570d570d460d410d56450d460d570d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d0d0d570d41200d410d570d0d0d3c3c0d0d0d570d41200d410d570d0d0d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d460d0d0d52470d570d0d0d460d46460d460d0d0d52470d570d0d0d460d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d410d460d0d300d0d0d460d410d41410d410d460d0d300d0d0d460d410d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d570d570d564040470d570d570d41410d570d570d564040470d570d570d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d0d0d0d0d0d0d0d0d0d0d0d0d0d41410d0d0d0d0d0d0d0d0d0d0d0d0d0d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d42404040430d0d42404040430d41410d42404040430d0d42404040430d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410d570d0d0d570d0d570d0d0d570d41410d570d0d0d570d0d570d0d0d570d41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
410e100d460d0d0d310d0d460d100e41410e100d460d0d0d310d0d460d100e41000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5240404055404040404040554040405352404040554040404040405540404053000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000400000877001300127701a0001c0001c0001c0001b0001b0001a00018000150001500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000200606110061030640506103061010610506101061100610106103061010610306105061010710507110071050710e0700107010070010701007010070110700607010070110700e070100700e07010070
__music__
00 41414344

